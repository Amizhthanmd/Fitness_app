{
  "version": 3,
  "sources": ["../../vuetify/src/components/VSystemBar/VSystemBar.tsx"],
  "sourcesContent": ["// Styles\nimport './VSystemBar.sass'\n\n// Composables\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\nexport const VSystemBar = genericComponent()({\n  name: 'VSystemBar',\n\n  props: {\n    color: String,\n    height: [Number, String],\n    window: Boolean,\n\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { ssrBootStyles } = useSsrBoot()\n    const height = computed(() => props.height ?? (props.window ? 32 : 24))\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: ref('top'),\n      layoutSize: height,\n      elementSize: height,\n      active: computed(() => true),\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-system-bar',\n          { 'v-system-bar--window': props.window },\n          themeClasses.value,\n          backgroundColorClasses.value,\n          elevationClasses.value,\n          roundedClasses.value,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          layoutItemStyles.value,\n          ssrBootStyles.value,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VSystemBar = InstanceType<typeof VSystemBar>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAeO,IAAMA,aAAaC,iBAAgB,EAAG;EAC3CC,MAAM;EAENC,OAAO;IACLC,OAAOC;IACPC,QAAQ,CAACC,QAAQF,MAAM;IACvBG,QAAQC;IAER,GAAGC,mBAAkB;IACrB,GAAGC,oBAAmB;IACtB,GAAGC,iBAAgB;IACnB,GAAGC,aAAY;IACf,GAAGC,eAAc;EACnB;EAEAC,MAAOZ,OAAKa,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEE;IAAa,IAAIC,aAAahB,KAAK;AAC3C,UAAM;MAAEiB;MAAwBC;IAAsB,IAAIC,mBAAmBC,MAAMpB,OAAO,OAAO,CAAC;AAClG,UAAM;MAAEqB;IAAiB,IAAIC,aAAatB,KAAK;AAC/C,UAAM;MAAEuB;IAAe,IAAIC,WAAWxB,KAAK;AAC3C,UAAM;MAAEyB;IAAc,IAAIC,WAAU;AACpC,UAAMvB,SAASwB,SAAS,MAAA;;AAAM3B,yBAAMG,WAANH,YAAiBA,MAAMK,SAAS,KAAK;KAAG;AACtE,UAAM;MAAEuB;IAAiB,IAAIC,cAAc;MACzCC,IAAI9B,MAAMD;MACVgC,OAAOJ,SAAS,MAAMK,SAAShC,MAAM+B,OAAO,EAAE,CAAC;MAC/CE,UAAUC,IAAI,KAAK;MACnBC,YAAYhC;MACZiC,aAAajC;MACbkC,QAAQV,SAAS,MAAM,IAAI;MAC3BW,UAAUlB,MAAMpB,OAAO,UAAU;IACnC,CAAC;AAEDuC,cAAU,MAAAC,YAAAxC,MAAAyC,KAAA;MAAA,SAEC,CACL,gBACA;QAAE,wBAAwBzC,MAAMK;MAAO,GACvCU,aAAa2B,OACbzB,uBAAuByB,OACvBrB,iBAAiBqB,OACjBnB,eAAemB,KAAK;MACrB,SACM,CACLxB,sBAAsBwB,OACtBd,iBAAiBc,OACjBjB,cAAciB,KAAK;IACpB,GACS5B,KAAK,CAElB;AAED,WAAO,CAAC;EACV;AACF,CAAC;",
  "names": ["VSystemBar", "genericComponent", "name", "props", "color", "String", "height", "Number", "window", "Boolean", "makeElevationProps", "makeLayoutItemProps", "makeRoundedProps", "makeTagProps", "makeThemeProps", "setup", "_ref", "slots", "themeClasses", "provideTheme", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "ssrBootStyles", "useSsrBoot", "computed", "layoutItemStyles", "useLayoutItem", "id", "order", "parseInt", "position", "ref", "layoutSize", "elementSize", "active", "absolute", "useRender", "_createVNode", "tag", "value"]
}
